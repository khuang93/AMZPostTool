/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package amzposttool;

import dataTypes.*;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.*;

/**
 *
 * @author Kailin Huang
 */
public class ToolBasicFrame extends javax.swing.JFrame {

    private String postProcessPath = "Z:\\StarCCM\\Auto 2016\\Aero\\PostProcess";
    private String baselinePath = "";
    private String comparePath = "";

    /**
     * Creates new form ToolBasicFrame
     */
    public ToolBasicFrame() {
        initComponents();
        javax.swing.ImageIcon amzLogo = new javax.swing.ImageIcon(getClass().getResource("/resources/Logo AMZ rot.png"));
        java.awt.Image amzScaled = amzLogo.getImage().getScaledInstance(100, 29, HEIGHT);
        javax.swing.ImageIcon amzLogoScaled = new javax.swing.ImageIcon(amzScaled);
        this.jLabel1.setIcon(amzLogoScaled);
        jTextField_BaselineName.setText(postProcessPath);
        jTextField_compareName.setText(postProcessPath);

        this.setVisible(true);
        this.setEnabled(true);

        this.jTextField_PathPostProcessing.setText(postProcessPath);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField_BaselineName = new javax.swing.JTextField();
        jButton_Baseline = new javax.swing.JButton();
        jButton_Compare = new javax.swing.JButton();
        jTextField_compareName = new javax.swing.JTextField();
        setPostPathButton = new javax.swing.JButton();
        jTextField_PathPostProcessing = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AMZ PostProcessing Analysis Tool");

        jButton_Baseline.setText("Choose Baseline Simulation");
        jButton_Baseline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BaselineActionPerformed(evt);
            }
        });

        jButton_Compare.setText("Choose Simulation to Compare");
        jButton_Compare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CompareActionPerformed(evt);
            }
        });

        setPostPathButton.setText("Set PostProcessing Path");
        setPostPathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setPostPathButtonActionPerformed(evt);
            }
        });

        jTextField_PathPostProcessing.setText(this.postProcessPath);

        jButton1.setText("Start Analysis");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_PathPostProcessing)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_BaselineName)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 117, Short.MAX_VALUE))
                    .addComponent(jTextField_compareName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(setPostPathButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton_Baseline, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_Compare, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField_PathPostProcessing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(setPostPathButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_BaselineName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_Baseline)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_compareName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_Compare)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setPostPathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setPostPathButtonActionPerformed
        // TODO add your handling code here:
        this.postProcessPath = this.chooseFolder(evt);
    }//GEN-LAST:event_setPostPathButtonActionPerformed

    private void jButton_BaselineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BaselineActionPerformed
        // TODO add your handling code here:
        this.baselinePath = this.chooseFolder(evt);
    }//GEN-LAST:event_jButton_BaselineActionPerformed

    private void jButton_CompareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CompareActionPerformed
        // TODO add your handling code here:
        this.comparePath = this.chooseFolder(evt);
    }//GEN-LAST:event_jButton_CompareActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.out.println("Starting Analysis");
        AnalyseFrame analySisFrame=new AnalyseFrame(baselinePath,comparePath);
        System.out.println("Starting Analysis");
        analySisFrame.setVisible(true);
        System.out.println("Starting Analysis");
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ToolBasicFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ToolBasicFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ToolBasicFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ToolBasicFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new ToolBasicFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_Baseline;
    private javax.swing.JButton jButton_Compare;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField_BaselineName;
    private javax.swing.JTextField jTextField_PathPostProcessing;
    private javax.swing.JTextField jTextField_compareName;
    private javax.swing.JButton setPostPathButton;
    // End of variables declaration//GEN-END:variables

    private String chooseFolder(java.awt.event.ActionEvent evt) {
        String openPath = this.postProcessPath;
        JFileChooser chooser = new JFileChooser();
        if (evt.getSource().equals(jButton_Baseline)) {
            openPath = jTextField_BaselineName.getText();
            chooser.setCurrentDirectory(new File(openPath));
        } else if (evt.getSource().equals(jButton_Compare)) {
            openPath = jTextField_compareName.getText();
            chooser.setCurrentDirectory(new File(openPath));
        } else {
            chooser.setCurrentDirectory(new File(postProcessPath));
        }

        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        String path = "";
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            System.out.println("You chose to open this file: "
                    + chooser.getSelectedFile().getName());
            path = chooser.getSelectedFile().getAbsolutePath();

        }
        
       
         if (evt.getSource().equals(jButton_Baseline)) {
             String[] pathSplit = path.split("\\\\");
             String pathShown=pathSplit[pathSplit.length-1];
            jTextField_BaselineName.setText(pathShown);
        } else if (evt.getSource().equals(jButton_Compare)) {
            String[] pathSplit = path.split("\\\\");
             String pathShown=pathSplit[pathSplit.length-1];
            this.jTextField_compareName.setText(pathShown);
        } else {
            this.jTextField_PathPostProcessing.setText(path);
            this.jTextField_BaselineName.setText(path);
            this.jTextField_compareName.setText(path);
        }

        return path;
    }

}
